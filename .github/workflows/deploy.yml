name: Deploy

on:
  workflow_run:
    workflows: ["Lint"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: starthub-vps
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env.prod file
        run: |
          touch .env
          DEBUG=False
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "LOGURU_LOG_LEVEL=${{ secrets.LOGURU_LOG_LEVEL }}" >> .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
      - name: login to hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove old image (if exists)
        run: docker rmi smilekundev/starthub-api:old || true

      - name: Tag latest as old
        run: docker tag smilekundev/starthub-api:latest smilekundev/starthub-api:old

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: smilekundev/starthub-api:latest

      - name: Run docker-compose up
        run: docker compose up -d