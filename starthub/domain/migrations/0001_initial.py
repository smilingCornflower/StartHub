# Generated by Django 5.2.1 on 2025-05-31 21:25

import re

import autoslug.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import domain.ports.model
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "code",
                    models.CharField(
                        max_length=2,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(message="Invalid country code", regex="^[A-Z]{2}$")
                        ],
                        verbose_name="Country code",
                    ),
                ),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "db_table": "countries",
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="FundingModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", autoslug.fields.AutoSlugField(editable=False, populate_from="name", unique=True)),
            ],
            options={
                "verbose_name": "Funding Model",
                "verbose_name_plural": "Funding Models",
                "db_table": "funding_models",
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="ProjectCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(editable=False, max_length=255, populate_from="name", unique=True),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "project_categories",
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.CharField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator()]),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(re.compile("^[\\w_-]+$")),
                            django.core.validators.MinLengthValidator(3),
                            django.core.validators.MaxLengthValidator(25),
                        ],
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        max_length=128,
                        validators=[
                            django.core.validators.RegexValidator(re.compile("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$")),
                            django.core.validators.MinLengthValidator(6),
                            django.core.validators.MaxLengthValidator(128),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "users",
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(editable=False, max_length=255, populate_from="name", unique=True),
                ),
                ("description", models.TextField()),
                ("business_id", models.CharField(max_length=32, unique=True)),
                ("business_plan", models.FileField(blank=True, null=True, upload_to="business_plans/")),
                ("established_date", models.DateField(blank=True, null=True)),
                (
                    "representative",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="companies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("country", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="domain.country")),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
                "db_table": "company",
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(editable=False, max_length=255, populate_from="name", unique=True),
                ),
                ("description", models.TextField()),
                ("goal_sum", models.DecimalField(decimal_places=2, max_digits=12)),
                ("current_sum", models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ("deadline", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("company", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="domain.company")),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "funding_model",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="domain.fundingmodel"),
                ),
                (
                    "category",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="domain.projectcategory"),
                ),
            ],
            options={
                "db_table": "projects",
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="TeamMember",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50)),
                ("surname", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="team_members", to="domain.project"
                    ),
                ),
            ],
            options={
                "db_table": "team_members",
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="ProjectPhone",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("number", models.CharField(max_length=50)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="phones", to="domain.project"
                    ),
                ),
            ],
            options={
                "db_table": "project_phones",
                "unique_together": {("project", "number")},
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
        migrations.CreateModel(
            name="ProjectSocialLink",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("platform", models.CharField(max_length=100)),
                ("url", models.URLField()),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="social_links", to="domain.project"
                    ),
                ),
            ],
            options={
                "db_table": "project_social_links",
                "unique_together": {("project", "platform")},
            },
            bases=(models.Model, domain.ports.model.AbstractModel),
        ),
    ]
